name: Validate ESP8266 Release Before Merge

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

jobs:
  validate:
    if: startsWith(github.head_ref, 'release/') # Only run if PR is from a release/* branch
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v2.0.0
        
      - name: Install platform and libraries
        run: |
          arduino-cli core update-index --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json
          arduino-cli core install esp8266:esp8266 --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json
          
          # Instalar librerías requeridas
          arduino-cli lib install WiFiManager
          arduino-cli lib install ArduinoJson
          
          # Librerías de GitHub
          mkdir -p ~/Arduino/libraries
          
          # WakeOnLan
          git clone https://github.com/a7md0/WakeOnLan ~/Arduino/libraries/WakeOnLan
          
          # ESP8266Ping
          git clone https://github.com/dancol90/ESP8266Ping ~/Arduino/libraries/ESP8266Ping
          
          # ArduinoOTA
          git clone https://github.com/JAndrassy/ArduinoOTA ~/Arduino/libraries/ArduinoOTA
          
          # GTimer
          git clone https://github.com/GyverLibs/GTimer ~/Arduino/libraries/GTimer
          
          # AutoOTA
          git clone https://github.com/GyverLibs/AutoOTA ~/Arduino/libraries/AutoOTA

      - name: Compile ESP8266 Firmware
        run: |
          arduino-cli compile --fqbn esp8266:esp8266:generic firmware/EspWOL/EspWOL.ino --output-dir bin
          
      - name: Check Firmware Size
        run: |
          FIRMWARE_SIZE=$(stat -c %s bin/EspWOL.ino.bin)
          MAX_SIZE=1048576  # 1MB limit for ESP8266
          if [ "$FIRMWARE_SIZE" -gt "$MAX_SIZE" ]; then
            echo "::error::Firmware is too large (${FIRMWARE_SIZE} bytes). Maximum allowed is ${MAX_SIZE} bytes."
            exit 1
          fi
          echo "Firmware size check passed: ${FIRMWARE_SIZE} bytes"